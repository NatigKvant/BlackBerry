{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/images/looking.jpeg","components/common/Preloader/lookingforajob.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","LookingForAJob","props","src","lookingforajob","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","formSummaryError","createField","Input","profileTextarea","style","lookingForAJob","type","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","photos","large","userPhoto","target","files","length","initialValues","formData","then","Post","item","message","likesCount","MyPosts","React","memo","postsElements","postsData","p","id","postsBlock","posts","AddPostFormRedux","values","addPost","newPostText","maxLength10","maxLengthCreator","Field","input","component","validate","required","name","placeholder","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.2b5614c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__3M7f6\",\"contact\":\"ProfileInfo_contact__1N3gp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\",\"input\":\"MyPosts_input__1BvRL\",\"placeholder\":\"MyPosts_placeholder__1A8Qz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","export default __webpack_public_path__ + \"static/media/looking.a456f4db.jpeg\";","import React from 'react'\nimport lookingforajob from \"../../../assets/images/looking.jpeg\";\n\nlet LookingForAJob = (props) => {\n   return <img src = {lookingforajob} />\n}\n\nexport default LookingForAJob;","import React, { useEffect, useState } from \"react\"\n\nconst ProfileStatusWithHooks = (props) => {\n\nlet [editMode, setEditMode] = useState(false);\nlet [status, setStatus] = useState(props.status);\n\nuseEffect( () => {\n    setStatus(props.status);\n}, [props.status])\n\nconst activateEditMode = () => {\n    setEditMode(true);\n}\n\nconst deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n}\n\nconst onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n}\n\nreturn (\n        \n    <div>\n        { !editMode &&\n        <div>\n          <b>Status: </b><span onDoubleClick={activateEditMode}>{props.status || \"--------\"}</span>\n        </div>\n    }\n        {editMode &&\n        <div>\n          <input onChange = {onStatusChange}\n                 onBlur = {deactivateEditMode}\n                 autoFocus = {true}\n                 value = {status} \n                 ></input>\n        </div>\n    }\n    </div>\n    \n    )\n  }\n\nexport default ProfileStatusWithHooks;","import React from \"react\"\nimport { reduxForm } from \"redux-form\";\nimport {createField, Input, profileTextarea} from \"../../common/FormsControls/FormControls\";\nimport style from './ProfileInfo.module.css';\nimport s from \"../../common/FormsControls/FormsControls.module.css\"\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n    return <form onSubmit={handleSubmit}>\n    <div><button>save</button></div>\n    { error && <div className={s.formSummaryError}>\n                { error}\n                </div>\n    }\n    <div>\n    <b>Full name</b>{createField(\"Full name\",\"fullName\", [], Input)}\n    </div>\n    <div>\n    <b>About Me</b>:\n    {createField(\"About me\",\"aboutMe\", [], profileTextarea )}\n    </div>\n    <div className={style.lookingForAJob}>\n    <b>Looking for a job</b>:{createField(\"\",\"lookingForAJob\", [], Input, {type: \"checkbox\"} )}\n    </div>\n    \n    <div>\n     <b>My Professional skills </b>\n     {createField(\"enter skills\",\"lookingForAJobDescription\", [], profileTextarea )}\n      </div>\n    <div>\n     <b>Contacts </b>: {Object.keys(profile.contacts).map(key => {\n       return <div key={key} className= {style.contact}>\n      <b>{key}: {createField(key,\"contacts.\" + key, [], Input)}</b>\n      </div>\n     })}\n      </div>\n  </form>\n  }\n\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\n\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport LookingForAJob from '../../common/Preloader/lookingforajob';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport userPhoto from \"../../../assets/images/user.png\";\nimport ProfileDataForm from './ProfileDataForm';\n\n\nconst ProfileInfo = ({isOwner,profile,status,updateStatus,savePhoto, saveProfile}) => {\n\n  let [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Preloader />\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if(e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  }\n\n  const onSubmit = (formData) => {\n    saveProfile(formData).then(\n      () => {\n        setEditMode(false);\n      }\n    \n    );\n}\n  \n\n  return (\n    <div>\n      <div className = {s.descriptionBlock}>\n        <img src ={profile.photos.large || userPhoto} />\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\n          \n          {editMode \n              ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> \n              : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner}/>}\n        \n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n        </div>\n\n    </div>\n  )\n}\n\nconst ProfileData = ({profile, isOwner,goToEditMode}) => {\n  return <div>\n  {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\n  <div>\n  <h1>{profile.fullName}</h1>\n  <div> About Me:\n  <h3>{profile.aboutMe}</h3>\n  </div>\n  <div className={s.lookingForAJob}>\n  {profile.lookingForAJob ? <LookingForAJob /> : null}\n  </div>\n  {profile.lookingForAJob &&\n  <div>\n   <b>My Professional skills </b>{profile.lookingForAJobDescription}\n    </div>\n  }\n  <div>\n   <b>Contacts </b>: {Object.keys(profile.contacts).map(key => {\n     return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n   })}\n    </div>\n  </div>\n</div>\n}\n\n\n\nconst Contact = ({contactTitle, contactValue}) => {\n  return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={s.item}>\n      <img src='https://www.vokrug.tv/pic/news/5/f/c/2/rsz300x300_5fc2879465129c11d65749ab9e3db7cc.jpg' />\n      {props.message}\n      <div>\n        {props.likesCount}\n      </div>\n    </div>\n\n  )\n}\n\nexport default Post;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { maxLengthCreator,required } from '../../../utils/validators/validators'\nimport { profileTextarea } from '../../common/FormsControls/FormControls';\n\nconst MyPosts = React.memo(props => { \n\n  let postsElements = props.postsData.map(p => {\n    \n    return <Post message = {p.message} id={p.id} likesCount={p.likesCount} key={p.id}/>\n  }); \n\n\n  let addNewPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n\n  return (\n    \n    <div className={s.postsBlock}>\n      <h3>My Posts</h3>\n      <div className={s.posts}>\n        { postsElements }\n      </div>\n      <AddPostFormRedux onSubmit={addNewPost}/>\n    </div>\n  \n\n  )\n }\n)\n\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPostsForm = (props) => {\n    return (\n      <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field className ={s.input} \n               component={profileTextarea} \n               validate={[required, maxLength10]} \n               name=\"newPostText\" \n               placeholder=\"Add Post\" />\n        </div>\n        <button>Add Post</button>\n      </form>\n    )\n}\n\nconst AddPostFormRedux = reduxForm({form: \"addPostForm\"})(MyPostsForm)\n\nexport default MyPosts;","import { connect } from 'react-redux';\nimport { addPostActionCreator} from '../../../Redux/profileReducer';\nimport MyPosts from './MyPosts';\n\n\nlet mapStateToProps = (state) => {\n  return {\n  postsData: state.profilePage.postsData,\n  newPostText: state.profilePage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText))\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = ({isOwner,profile,status,updateStatus,savePhoto,saveProfile}) => {\n  return (\n      <div>\n        <ProfileInfo isOwner={isOwner}\n                     profile={profile} \n                     status={status}\n                     updateStatus={updateStatus}\n                     savePhoto={savePhoto}\n                     saveProfile={saveProfile}/>\n        <MyPostsContainer />\n                 \n      </div>\n    )\n  }\n  \n  export default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { getStatus, getUserProfile, updateStatus, savePhoto, saveProfile } from '../../Redux/profileReducer';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport Profile from './Profile';\n\nclass ProfileContainer extends React.Component {\n\nrefreshProfile() {\n  let userId = this.props.match.params.userId;\n  if(!userId) {\n    userId = this.props.authorizedUserId;\n    if(!userId) {\n      /* this.props.history.push(\"/login\") */\n      this.props.history.push(\"/profile/1781\")\n    }\n  }\n\n      this.props.getUserProfile(userId);\n      this.props.getStatus(userId);\n  }\n\n\ncomponentDidMount() {\n \n this.refreshProfile();\n}\n\ncomponentDidUpdate(prevProps, prevState, snapshot) {\n  if(this.props.match.params.userId != prevProps.match.params.userId) {\n    this.refreshProfile();\n  }\n}\n\n\nrender() {\n\n  return (\n    <Profile {...this.props} \n    isOwner={!this.props.match.params.userId}\n              profile={this.props.profile}\n              status = {this.props.status}\n              updateStatus = {this.props.updateStatus}\n              savePhoto={this.props.savePhoto}/>  \n  )\n }\n}\n\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus,updateStatus,savePhoto,saveProfile }),\n  withRouter,\n  /* withAuthRedirect, */\n)(ProfileContainer)"],"sourceRoot":""}