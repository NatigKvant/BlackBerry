{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","src","to","activeClassName","activeLink","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","dialogsTextarea","validate","required","input","placeholder","Dialogs","dialogsElements","dialogsData","map","d","messageElements","messagesData","m","isAuth","dialogs","dialogsItems","messages","values","addMessage","newMessageText","compose","connect","state","dialogsPage","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,WAAa,4BAA4B,OAAS,wBAAwB,QAAU,yBAAyB,SAAW,0BAA0B,MAAQ,uBAAuB,YAAc,+B,qHCalRC,EAVI,SAACC,GACnB,IAAIC,EAAO,YAAcD,EAAME,GAC9B,OACE,sBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,UACM,qBAAKC,IAAI,2FACT,cAAC,IAAD,CAASC,GAAKP,EAAMQ,gBAAiBL,IAAEM,WAAvC,SAAoDV,EAAMW,WCKrDC,EAXC,SAACZ,GAEf,OACE,8BACA,sBAAKG,UAAWC,IAAES,QAAlB,UACA,qBAAKN,IAAI,qHACNP,EAAMa,c,gBCoCPC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACjB,GACtB,OACE,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACM,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBX,UAAaC,IAAEsB,MACff,KAAK,iBACLgB,YAAY,mBAErB,oCAAM,mDAODC,EAxDC,SAAC5B,GAEjB,IAAI6B,EAAkB7B,EAAM8B,YAAYC,KAAI,SAAAC,GAC1C,OAAO,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMT,GAAI8B,EAAE9B,IAAS8B,EAAE9B,OAGhD+B,EAAkBjC,EAAMkC,aAAaH,KAAI,SAAAI,GAC3C,OAAO,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAASX,GAAIiC,EAAEjC,IAASiC,EAAEjC,OAOvD,OAAIF,EAAMoC,OAKN,sBAAKjC,UAAWC,IAAEiC,QAAlB,UACE,qBAAKlC,UAAWC,IAAEkC,aAAlB,SAEKT,IAEN,qBAAK1B,UAAWC,IAAEmC,SAAlB,SACG,8BAAON,MAMT,cAACjB,EAAD,CAAqBG,SArBP,SAACqB,GACnBxC,EAAMyC,WAAWD,EAAOE,sBAIjB,cAAC,IAAD,CAAUlC,GAAK,Y,wBCATmC,sBACbC,aAjBoB,SAACC,GACrB,MAAO,CACLf,YAAae,EAAMC,YAAYhB,YAC/BI,aAAcW,EAAMC,YAAYZ,aAChCQ,eAAgBG,EAAMC,YAAYJ,mBAIb,SAACK,GACxB,MAAO,CACLN,WAAY,SAACC,GACXK,EAAUC,YAAwBN,SAOtCO,IAFaN,CAGbf","file":"static/js/4.d1ec7e2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"activeLink\":\"Dialogs_activeLink__34w6e\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"message\":\"Dialogs_message__1xIDh\",\"messages\":\"Dialogs_messages__1w_Up\",\"input\":\"Dialogs_input__382Ja\",\"placeholder\":\"Dialogs_placeholder__UWHWP\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './../Dialogs.module.css';\n\nconst DialogItem = (props) => {\n let path = \"/dialogs/\" + props.id\n  return (\n    <div className={s.dialog + ' ' + s.active}>\n          <img src='https://www.vokrug.tv/pic/news/5/f/c/2/rsz300x300_5fc2879465129c11d65749ab9e3db7cc.jpg' />  \n          <NavLink to ={path} activeClassName={s.activeLink}>{props.name}</NavLink> \n          </div>\n  )\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n  \n  return(\n    <div>\n    <div className={s.message}>\n    <img src='https://image.shutterstock.com/z/stock-vector-incognito-agent-icon-spy-logo-unknown-person-avatar-1204746199.jpg'></img>\n      {props.message}</div>\n    </div>\n  )\n}\n\nexport default Message;","import { Redirect } from 'react-router';\nimport { Field, reduxForm } from 'redux-form';\nimport DialogItem from './DialogItem/DialogItem';\nimport s from './Dialogs.module.css';\nimport Message from './Message/Message';\nimport { maxLengthCreator,required } from '../../utils/validators/validators'\nimport { dialogsTextarea } from '../common/FormsControls/FormControls';\n\nconst Dialogs = (props) => {\n\nlet dialogsElements = props.dialogsData.map(d => {\n  return <DialogItem name={d.name} id={d.id} key={d.id} />\n});\n\nlet messageElements = props.messagesData.map(m => {\n  return <Message message={m.message} id={m.id} key={m.id}/>\n});\n\nlet addNewMessage = (values) => {\n  props.addMessage(values.newMessageText);\n  }\n\nif(!props.isAuth){\n  return <Redirect to = \"/login\" />\n}\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>\n          \n         { dialogsElements }\n     </div>\n     <div className={s.messages}>\n        <div>{ messageElements }</div>\n        \n         \n         \n      \n      </div>\n      <AddMessageFormRedux onSubmit={addNewMessage}/>\n    </div>\n\n  )\n}\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst addMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n          <div> \n            <Field component={dialogsTextarea}\n                   validate={[required, maxLength50]} \n                   className = {s.input} \n                   name=\"newMessageText\" \n                   placeholder=\"Type Message\" />\n          </div>\n          <div> <button>Send</button></div>\n        </form>\n  )\n}\n\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(addMessageForm)\n\nexport default Dialogs;","import { addMessageActionCreator} from '../../Redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsData: state.dialogsPage.dialogsData,\n    messagesData: state.dialogsPage.messagesData,\n    newMessageText: state.dialogsPage.newMessageText,\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addMessage: (newMessageText) => {\n      dispatch (addMessageActionCreator(newMessageText));\n    }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n\n"],"sourceRoot":""}